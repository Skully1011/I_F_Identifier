# build with `docker build -t malware_identifier -f Docker/ContemporaryEnvIdentifierDockerfile .` from Project directory
# run using `docker run -i -t --name="malware_identifier" malware_identifier  bash`

# get base ubuntu (bionic; 18.04) image
FROM ubuntu
# USER root

COPY ./Checking_Result.py /MalwareIdentifier/
COPY ./ThresholdRandomForest.py /MalwareIdentifier/
COPY ./test_article.py /MalwareIdentifier/
COPY ./selected_columns.json /MalwareIdentifier/
COPY ./selected_class.json /MalwareIdentifier/
COPY ./selected_param.json /MalwareIdentifier/
COPY ./malware_apt.h5 /MalwareIdentifier/
COPY ./malware_non_apt.h5 /MalwareIdentifier/

WORKDIR /MalwareIdentifier/

# do these separately so they can be cached as separate steps; when rebuilding image: if python stuff
# fails this will be saved and prevent having to upgrade during every build
RUN apt update 
RUN apt upgrade -y

# utilities for working in the container
RUN apt install -y vim

# Necessary python packages for I_F_identifier 
RUN apt install -y python3 python3-pip
RUN python3 -m pip install pandas
RUN python3 -m pip install numpy
RUN python3 -m pip install scikit-learn 
RUN python3 -m pip install pycm
RUN python3 -m pip install packaging
RUN  python3 -m pip install tables 

# generate requirements.txt for documentation purposes
# RUN  python3 -m pip install pipreqs 
# RUN  pipreqs .
RUN python3 -m pip freeze > requirements.txt

# RUN <<EOF
# EOF


CMD [ "python3", "test_article.py" ]
