# build with `docker build -t malware_identifier -f Docker/I_F_IdentifierDockerfile .` from Project directory
# run using `docker run -i -t --name="malware_identifier" --rm malware_identifier  bash`

# get base ubuntu (bionic; 18.04) image
FROM ubuntu
# USER root
WORKDIR /MalwareIdentifier/

# do these separately so they can be cached as separate steps; when rebuilding image: if python stuff
# fails this will be saved and prevent having to upgrade during every build
RUN apt update 
# RUN apt upgrade -y

# utilities for working in the container
RUN apt install -y vim

# Necessary python packages for I_F_identifier 
RUN apt install -y python3 python3-pip
# RUN python3 -m pip install pandas
# RUN python3 -m pip install numpy
# RUN python3 -m pip install scikit-learn 
# RUN python3 -m pip install pycm
# RUN python3 -m pip install packaging
# RUN  python3 -m pip install tables
# alternatively...
COPY ./requirements.txt .
RUN python3 -m pip install -r ./requirements.txt

# copy in files last to prevent rebuilding update and installation layers when the
# source code and config files are updated
COPY ./Checking_Result.py .
COPY ./ThresholdRandomForest.py .
COPY ./test_article.py .
COPY ./selected_columns.json .
COPY ./selected_class.json .
COPY ./selected_param.json .
COPY ./dataset/IFIdentifierDataset/malware_apt.h5 .
COPY ./dataset/IFIdentifierDataset/malware_non_apt.h5 .
# new additions
COPY ./dataset/AndroidMalwareDetection/TUANDROMD.csv .
COPY ./tuandromd_selected_columns.json .

# generate requirements.txt for documentation purposes
# NOTE when adding new packages to the container the requirements should be extracted to use for pip installation
# `docker cp malware_identifier:/MalwareIdentifier/requirements.txt .`
RUN python3 -m pip freeze > requirements.txt